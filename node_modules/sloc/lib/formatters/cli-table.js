// Generated by CoffeeScript 1.10.0
(function() {
  var Table, i18n, path, sloc,
    slice = [].slice,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  Table = require('cli-table');

  i18n = require('../i18n');

  sloc = require('../sloc');

  path = require('path');

  module.exports = function(data, options, fmtOpts) {
    var d, ext, f, head, heads, i, k, keys, len, ref, ref1, s, statToArray, table;
    keys = options.keys || sloc.keys;
    heads = options.details ? ['Path'].concat(slice.call(keys)) : ['Extension'].concat(slice.call(keys));
    head = indexOf.call(fmtOpts, 'no-head') >= 0 ? [] : (function() {
      var i, len, results;
      results = [];
      for (i = 0, len = heads.length; i < len; i++) {
        k = heads[i];
        results.push(i18n.en[k]);
      }
      return results;
    })();
    table = new Table({
      head: head
    });
    statToArray = function(d) {
      var i, len, results;
      results = [];
      for (i = 0, len = keys.length; i < len; i++) {
        k = keys[i];
        results.push(d[k]);
      }
      return results;
    };
    if (options.details) {
      ref = data.files;
      for (i = 0, len = ref.length; i < len; i++) {
        f = ref[i];
        table.push([f.path].concat(slice.call(statToArray(f.stats))));
      }
    } else if ((s = data.summary) != null) {
      table.push(['- Total -'].concat(slice.call(statToArray(s))));
      ref1 = data.byExt;
      for (ext in ref1) {
        d = ref1[ext];
        if ((s = d.summary) != null) {
          table.push([ext].concat(slice.call(statToArray(s))));
        }
      }
    }
    return table.toString();
  };

}).call(this);
